{
    "name": "mdx-all-in-one",
    "displayName": "%ext.displayName%",
    "description": "%ext.description%",
    "icon": "images/Markdown-mark.png",
    "version": "1.0.0",
    "publisher": "jpgls",
    "engines": {
        "vscode": "^1.36.0"
    },
    "categories": [
        "Other"
    ],
    "keywords": [
        "mdx"
    ],
    "bugs": {
        "url": "https://github.com/jpgls/vscode-mdx/issues"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/jpgls/vscode-mdx"
    },
    "license": "MIT",
    "activationEvents": [
        "onLanguage:mdx",
        "workspaceContains:README.mdx"
    ],
    "main": "./dist/extension",
    "contributes": {
        "commands": [
            {
                "command": "mdx.extension.toc.create",
                "title": "%command.toc.create.title%",
                "category": "MDX All in One"
            },
            {
                "command": "mdx.extension.toc.update",
                "title": "%command.toc.update.title%",
                "category": "MDX All in One"
            },
            {
                "command": "mdx.extension.printToHtml",
                "title": "%command.printToHtml.title%",
                "category": "MDX All in One"
            },
            {
                "command": "mdx.extension.editing.toggleCodeSpan",
                "title": "%command.editing.toggleCodeSpan.title%",
                "category": "MDX All in One"
            },
            {
                "command": "mdx.extension.editing.toggleMath",
                "title": "%command.editing.toggleMath.title%",
                "category": "MDX All in One"
            },
            {
                "command": "mdx.extension.editing.toggleMathReverse",
                "title": "%command.editing.toggleMathReverse.title%",
                "category": "MDX All in One"
            },
            {
                "command": "mdx.extension.editing.toggleList",
                "title": "%command.editing.toggleList.title%",
                "category": "MDX All in One"
            }
        ],
        "keybindings": [
            {
                "command": "mdx.extension.editing.toggleBold",
                "key": "ctrl+b",
                "mac": "cmd+b",
                "when": "editorTextFocus && !editorReadonly && editorLangId == mdx"
            },
            {
                "command": "mdx.extension.editing.toggleItalic",
                "key": "ctrl+i",
                "mac": "cmd+i",
                "when": "editorTextFocus && !editorReadonly && editorLangId == mdx"
            },
            {
                "command": "mdx.extension.editing.toggleStrikethrough",
                "key": "alt+s",
                "when": "editorTextFocus && !editorReadonly && editorLangId == mdx && !isMac"
            },
            {
                "command": "mdx.extension.editing.toggleHeadingUp",
                "key": "ctrl+shift+]",
                "mac": "ctrl+shift+]",
                "when": "editorTextFocus && !editorReadonly && editorLangId == mdx"
            },
            {
                "command": "mdx.extension.editing.toggleHeadingDown",
                "key": "ctrl+shift+[",
                "mac": "ctrl+shift+[",
                "when": "editorTextFocus && !editorReadonly && editorLangId == mdx"
            },
            {
                "command": "mdx.extension.editing.toggleMath",
                "key": "ctrl+m",
                "mac": "cmd+m",
                "when": "editorTextFocus && !editorReadonly && editorLangId == mdx"
            },
            {
                "command": "mdx.extension.onEnterKey",
                "key": "enter",
                "when": "editorTextFocus && !editorReadonly && editorLangId == mdx && !suggestWidgetVisible && vim.mode != 'Normal' && vim.mode != 'Visual' && vim.mode != 'VisualBlock' && vim.mode != 'VisualLine' && vim.mode != 'SearchInProgressMode' && vim.mode != 'CommandlineInProgress' && vim.mode != 'Replace' && vim.mode != 'EasyMotionMode' && vim.mode != 'EasyMotionInputMode' && vim.mode != 'SurroundInputMode'"
            },
            {
                "command": "mdx.extension.onCtrlEnterKey",
                "key": "ctrl+enter",
                "mac": "cmd+enter",
                "when": "editorTextFocus && !editorReadonly && editorLangId == mdx && !suggestWidgetVisible"
            },
            {
                "command": "mdx.extension.onShiftEnterKey",
                "key": "shift+enter",
                "when": "editorTextFocus && !editorReadonly && editorLangId == mdx && !suggestWidgetVisible"
            },
            {
                "command": "mdx.extension.onTabKey",
                "key": "tab",
                "when": "editorTextFocus && !editorReadonly && editorLangId == mdx && !suggestWidgetVisible && !editorTabMovesFocus && !inSnippetMode && !hasSnippetCompletions && !hasOtherSuggestions"
            },
            {
                "command": "mdx.extension.onShiftTabKey",
                "key": "shift+tab",
                "when": "editorTextFocus && !editorReadonly && editorLangId == mdx && !suggestWidgetVisible && !editorTabMovesFocus && !inSnippetMode && !hasSnippetCompletions && !hasOtherSuggestions"
            },
            {
                "command": "mdx.extension.onBackspaceKey",
                "key": "backspace",
                "when": "editorTextFocus && !editorReadonly && editorLangId == mdx && !suggestWidgetVisible && vim.mode != 'Normal' && vim.mode != 'Visual' && vim.mode != 'VisualBlock' && vim.mode != 'VisualLine' && vim.mode != 'SearchInProgressMode' && vim.mode != 'CommandlineInProgress' && vim.mode != 'Replace' && vim.mode != 'EasyMotionMode' && vim.mode != 'EasyMotionInputMode' && vim.mode != 'SurroundInputMode'"
            },
            {
                "command": "mdx.extension.onMoveLineUp",
                "key": "alt+up",
                "when": "editorTextFocus && !editorReadonly && editorLangId == mdx && !suggestWidgetVisible"
            },
            {
                "command": "mdx.extension.onMoveLineDown",
                "key": "alt+down",
                "when": "editorTextFocus && !editorReadonly && editorLangId == mdx && !suggestWidgetVisible"
            },
            {
                "command": "mdx.extension.onCopyLineUp",
                "key": "shift+alt+up",
                "when": "editorTextFocus && !editorReadonly && editorLangId == mdx && !suggestWidgetVisible"
            },
            {
                "command": "mdx.extension.onCopyLineDown",
                "key": "shift+alt+down",
                "when": "editorTextFocus && !editorReadonly && editorLangId == mdx && !suggestWidgetVisible"
            },
            {
                "command": "mdx.extension.onIndentLines",
                "key": "ctrl+]",
                "mac": "cmd+]",
                "when": "editorTextFocus && editorLangId == mdx && !suggestWidgetVisible"
            },
            {
                "command": "mdx.extension.onOutdentLines",
                "key": "ctrl+[",
                "mac": "cmd+[",
                "when": "editorTextFocus && editorLangId == mdx && !suggestWidgetVisible"
            },
            {
                "command": "mdx.extension.checkTaskList",
                "key": "alt+c",
                "when": "editorTextFocus && editorLangId == mdx"
            },
            {
                "command": "mdx.extension.togglePreview",
                "key": "ctrl+shift+v",
                "mac": "cmd+shift+v",
                "when": "!terminalFocus"
            },
            {
                "command": "mdx.extension.togglePreviewToSide",
                "key": "ctrl+k v",
                "mac": "cmd+k v",
                "when": "!terminalFocus"
            },
            {
                "command": "mdx.extension.editing.paste",
                "key": "ctrl+v",
                "mac": "cmd+v",
                "when": "editorTextFocus && editorLangId == mdx && editorHasSelection"
            }
        ],
        "configuration": {
            "type": "object",
            "title": "%config.title%",
            "properties": {
                "mdx.extension.completion.root": {
                    "type": "string",
                    "default": "",
                    "description": "%config.completion.root%",
                    "scope": "resource"
                },
                "mdx.extension.italic.indicator": {
                    "type": "string",
                    "default": "*",
                    "description": "%config.italic.indicator.description%",
                    "enum": [
                        "*",
                        "_"
                    ]
                },
                "mdx.extension.katex.macros": {
                    "type": "object",
                    "default": {},
                    "description": "%config.katex.macros.description%"
                },
                "mdx.extension.list.indentationSize": {
                    "type": "string",
                    "enum": [
                        "adaptive",
                        "inherit"
                    ],
                    "enumDescriptions": [
                        "%config.list.indentationSize.enumDescriptions.adaptive%",
                        "%config.list.indentationSize.enumDescriptions.inherit%"
                    ],
                    "default": "adaptive",
                    "description": "%config.list.indentationSize.description%",
                    "scope": "resource"
                },
                "mdx.extension.orderedList.autoRenumber": {
                    "type": "boolean",
                    "default": true,
                    "description": "%config.orderedList.autoRenumber.description%"
                },
                "mdx.extension.orderedList.marker": {
                    "type": "string",
                    "default": "ordered",
                    "description": "%config.orderedList.marker.description%",
                    "enum": [
                        "one",
                        "ordered"
                    ],
                    "enumDescriptions": [
                        "%config.orderedList.marker.enumDescriptions.one%",
                        "%config.orderedList.marker.enumDescriptions.ordered%"
                    ]
                },
                "mdx.extension.preview.autoShowPreviewToSide": {
                    "type": "boolean",
                    "default": false,
                    "description": "%config.preview.autoShowPreviewToSide.description%"
                },
                "mdx.extension.print.absoluteImgPath": {
                    "type": "boolean",
                    "default": true,
                    "description": "%config.print.absoluteImgPath.description%",
                    "scope": "resource"
                },
                "mdx.extension.print.imgToBase64": {
                    "type": "boolean",
                    "default": false,
                    "description": "%config.print.imgToBase64.description%",
                    "scope": "resource"
                },
                "mdx.extension.print.onFileSave": {
                    "type": "boolean",
                    "default": false,
                    "description": "%config.print.onFileSave.description%",
                    "scope": "resource"
                },
                "mdx.extension.print.validateUrls": {
                    "type": "boolean",
                    "default": true,
                    "description": "%config.print.validateUrls.description%"
                },
                "mdx.extension.print.theme": {
                    "type": "string",
                    "default": "light",
                    "enum": [
                        "light",
                        "dark"
                    ],
                    "description": "%config.print.theme%",
                    "scope": "resource"
                },
                "mdx.extension.syntax.decorations": {
                    "type": "boolean",
                    "default": true,
                    "description": "%config.syntax.decorations.description%"
                },
                "mdx.extension.syntax.plainTheme": {
                    "type": "boolean",
                    "default": false,
                    "description": "%config.syntax.plainTheme.description%"
                },
                "mdx.extension.tableFormatter.enabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "%config.tableFormatter.enabled.description%"
                },
                "mdx.extension.tableFormatter.normalizeIndentation": {
                    "type": "boolean",
                    "default": false,
                    "description": "%config.tableFormatter.normalizeIndentation.description%"
                },
                "mdx.extension.toc.downcaseLink": {
                    "type": "boolean",
                    "default": true,
                    "description": "%config.toc.downcaseLink.description%"
                },
                "mdx.extension.toc.githubCompatibility": {
                    "type": "boolean",
                    "default": false,
                    "description": "%config.toc.githubCompatibility.description%"
                },
                "mdx.extension.toc.levels": {
                    "type": "string",
                    "default": "1..6",
                    "description": "%config.toc.levels.description%"
                },
                "mdx.extension.toc.orderedList": {
                    "type": "boolean",
                    "default": false,
                    "description": "%config.toc.orderedList.description%"
                },
                "mdx.extension.toc.plaintext": {
                    "type": "boolean",
                    "default": false,
                    "description": "%config.toc.plaintext.description%"
                },
                "mdx.extension.toc.unorderedList.marker": {
                    "type": "string",
                    "default": "-",
                    "description": "%config.toc.unorderedList.marker.description%",
                    "enum": [
                        "-",
                        "*",
                        "+"
                    ]
                },
                "mdx.extension.toc.updateOnSave": {
                    "type": "boolean",
                    "default": true,
                    "description": "%config.toc.updateOnSave.description%"
                }
            }
        },
        "mdx.markdownItPlugins": true,
        "mdx.previewStyles": [
            "./media/checkbox.css",
            "./node_modules/katex/dist/katex.min.css"
        ],
        "grammars": [
            {
                "scopeName": "markdown.math_display",
                "path": "./syntaxes/math_display.markdown.tmLanguage.json",
                "injectTo": [
                    "text.html.markdown"
                ]
            },
            {
                "scopeName": "markdown.math_inline",
                "path": "./syntaxes/math_inline.markdown.tmLanguage.json",
                "injectTo": [
                    "text.html.markdown"
                ]
            },
            {
                "scopeName": "text.katex",
                "path": "./syntaxes/katex.tmLanguage.json"
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "webpack --mode production",
        "compile": "webpack --mode none",
        "watch": "webpack --mode none --watch",
        "test": "tsc -p ./ && node ./out/test/runTest.js",
        "test-compile": "tsc -p ./"
    },
    "dependencies": {
        "@neilsustc/markdown-it-katex": "^0.4.0",
        "highlight.js": "^9.15.6",
        "image-size": "^0.7.4",
        "markdown-it": "^8.4.2",
        "markdown-it-task-lists": "^2.1.1",
        "string-similarity": "^3.0.0"
    },
    "devDependencies": {
        "@types/highlight.js": "^9.12.3",
        "@types/image-size": "^0.7.0",
        "@types/markdown-it": "^0.0.7",
        "@types/mocha": "^5.2.6",
        "@types/node": "^11.11.3",
        "@types/vscode": "1.36.0",
        "glob": "^7.1.4",
        "mocha": "^6.2.0",
        "ts-loader": "^6.0.4",
        "typescript": "^3.5.2",
        "vscode-test": "^1.0.0",
        "webpack": "^4.36.1",
        "webpack-cli": "^3.3.6"
    }
}
